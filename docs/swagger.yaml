definitions:
  handlers.AddToCartRequest:
    properties:
      product_id:
        type: integer
      quantity:
        type: integer
    type: object
  handlers.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  handlers.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  handlers.RegisterRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.CartItem:
    properties:
      cart_id:
        type: integer
      id:
        type: integer
      product_id:
        type: integer
      quantity:
        type: integer
    type: object
  models.Order:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      total:
        type: number
      userID:
        type: integer
    type: object
  models.Product:
    properties:
      category:
        type: string
      createdAt:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        type: number
      stock:
        type: integer
    type: object
info:
  contact: {}
paths:
  /api/admin/orders:
    get:
      description: Возвращает список всех заказов (только для администратора)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Order'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Получить все заказы (Админ)
      tags:
      - Заказ
  /api/admin/orders/export:
    get:
      description: Экспортирует все заказы в формате CSV (только для администратора)
      produces:
      - text/csv
      responses:
        "200":
          description: CSV-файл с заказами
          schema:
            type: file
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Экспортировать заказы в CSV (Админ)
      tags:
      - Заказ
  /api/admin/products:
    post:
      consumes:
      - application/json
      description: Создаёт новый товар (только для администратора)
      parameters:
      - description: Данные товара
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - text/plain
      responses:
        "201":
          description: Product added
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Добавить товар (админ)
      tags:
      - Товар
  /api/admin/products/{id}:
    delete:
      description: Удаляет товар по его ID (только для администратора)
      parameters:
      - description: ID товара
        in: path
        name: id
        required: true
        type: integer
      produces:
      - text/plain
      responses:
        "200":
          description: Product deleted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Удалить товар (админ)
      tags:
      - Товар
    put:
      consumes:
      - application/json
      description: Обновляет существующий товар по его ID (только для администратора)
      parameters:
      - description: ID товара
        in: path
        name: id
        required: true
        type: integer
      - description: Новые данные товара
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - text/plain
      responses:
        "200":
          description: Product updated
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Обновить товар (админ)
      tags:
      - Товар
  /api/cart:
    get:
      description: Возвращает список товаров в корзине текущего пользователя
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.CartItem'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Получить корзину
      tags:
      - Корзина
    post:
      consumes:
      - application/json
      description: Добавляет выбранный товар в корзину пользователя
      parameters:
      - description: ID товара и количество
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handlers.AddToCartRequest'
      produces:
      - text/plain
      responses:
        "201":
          description: Товар добавлен в корзину
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Добавить товар в корзину
      tags:
      - Корзина
  /api/cart/{product_id}:
    delete:
      description: Удаляет указанный товар из корзины
      parameters:
      - description: ID товара
        in: path
        name: product_id
        required: true
        type: integer
      produces:
      - text/plain
      responses:
        "200":
          description: Товар удалён из корзины
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Удалить товар из корзины
      tags:
      - Корзина
    put:
      consumes:
      - application/json
      description: Изменяет количество указанного товара в корзине
      parameters:
      - description: ID товара
        in: path
        name: product_id
        required: true
        type: integer
      - description: Новое количество
        in: body
        name: input
        required: true
        schema:
          properties:
            quantity:
              type: integer
          type: object
      produces:
      - text/plain
      responses:
        "200":
          description: Количество товара обновлено
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Обновить количество товара в корзине
      tags:
      - Корзина
  /api/cart/checkout:
    post:
      description: Завершает оформление заказа на основе текущей корзины
      produces:
      - text/plain
      responses:
        "200":
          description: Заказ успешно оформлен
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Оформить заказ
      tags:
      - Корзина
  /api/cart/clear:
    delete:
      description: Удаляет все товары из корзины пользователя
      produces:
      - text/plain
      responses:
        "200":
          description: Корзина очищена
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Очистить корзину
      tags:
      - Корзина
  /api/categories:
    get:
      description: Возвращает список категорий товаров
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Получить категории товаров
      tags:
      - Товар
  /api/login:
    post:
      consumes:
      - application/json
      description: Выполняет вход пользователя и возвращает JWT-токен
      parameters:
      - description: Имя пользователя и пароль
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              token:
                type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Авторизация пользователя
      tags:
      - Пользователь
  /api/me:
    get:
      description: Возвращает профиль текущего пользователя
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              ' role':
                type: string
              ' username':
                type: string
              id:
                type: integer
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Получить информацию о пользователе
      tags:
      - Пользователь
  /api/order:
    post:
      description: Создаёт новый заказ из товаров в корзине пользователя
      produces:
      - text/plain
      responses:
        "200":
          description: Заказ успешно создан
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Оформить заказ
      tags:
      - Заказ
  /api/orders:
    get:
      description: Возвращает список заказов текущего пользователя
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Order'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Получить заказы пользователя
      tags:
      - Заказ
  /api/products:
    get:
      description: Получает список товаров с возможностью фильтрации
      parameters:
      - description: Поиск по названию
        in: query
        name: search
        type: string
      - description: Фильтр по категории
        in: query
        name: category
        type: string
      - description: Минимальная цена
        in: query
        name: min_price
        type: number
      - description: Максимальная цена
        in: query
        name: max_price
        type: number
      - description: Сортировка
        in: query
        name: sort
        type: string
      - description: Ограничение количества результатов
        in: query
        name: limit
        type: integer
      - description: Сдвиг для пагинации
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Product'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Получить список товаров
      tags:
      - Товар
  /api/products/{id}:
    get:
      description: Возвращает детали товара по его идентификатору
      parameters:
      - description: ID товара
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Получить товар по ID
      tags:
      - Товар
  /api/register:
    post:
      consumes:
      - application/json
      description: Создаёт нового пользователя
      parameters:
      - description: Имя пользователя и пароль
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handlers.RegisterRequest'
      produces:
      - text/plain
      responses:
        "201":
          description: Пользователь успешно зарегистрирован
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Регистрация пользователя
      tags:
      - Пользователь
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
